name: StrathLearn CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          
      - name: Install dependencies
        run: go mod download
        
      - name: Test
        run: go test -v ./...
        
   

  build-docker:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Build code-runner image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile.runner
          tags: strathlearn-code-runner:latest
          load: true
          
      - name: Build main app image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          tags: strathlearn-app:latest
          
      - name: Save Docker images
        run: |
          mkdir -p images
          docker save strathlearn-code-runner:latest > images/runner.tar
          docker save strathlearn-app:latest > images/app.tar
          
      - name: Upload images as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: docker-images
          path: images/

  deploy:
    runs-on: ubuntu-latest
    needs: build-docker
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - name: Download Docker images
        uses: actions/download-artifact@v3
        with:
          name: docker-images
          path: images/
          
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          
      - name: Transfer Docker images and deployment scripts
        run: |
          scp -o StrictHostKeyChecking=no images/runner.tar images/app.tar root@172.105.148.227:/root/
          scp -o StrictHostKeyChecking=no deploy.sh docker-compose.yml root@172.105.148.227:/root/
          
      - name: Deploy application
        run: |
          ssh -o StrictHostKeyChecking=no root@172.105.148.227 'bash /root/deploy.sh'