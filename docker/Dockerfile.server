FROM golang:1.19-alpine

WORKDIR /app

# Install system dependencies
RUN apk add --no-cache gcc musl-dev git

# Copy all Go files first
COPY backend/ ./backend/

# Print directory structure for debugging
RUN ls -la
RUN ls -la backend/

# Try to build with verbose output to see what's happening
RUN cd backend && go mod init strathlearn || echo "Module already initialized"
RUN cd backend && go mod tidy || echo "Failed to tidy modules"
RUN cd backend && GOOS=linux GOARCH=amd64 go build -v -o /app/server || echo "Build failed"

# Create necessary directories
RUN mkdir -p /app/executor-workdir
RUN mkdir -p /app/challenges

# Expose the server port
EXPOSE 8080
EXPOSE 9000

# Run the server
CMD ["/app/server"]